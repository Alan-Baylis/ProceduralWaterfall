#pragma kernel CSStreamLines

#include "UnityCG.cginc"
#include "ClassicNoise2D.cginc"

#define NUM_THREAD_X 8
#define NUM_THREAD_Y 1
#define NUM_THREAD_Z 1

struct StreamLine
{
	int id;
	float3 birthPosition;
	float3 deathPosition;
	float3 position;
	float3 initVelocity;
	float3 velocity;
};

cbuffer CB
{
	float _DeltaTime;
	float _Gravity;
}

RWStructuredBuffer<StreamLine> _StreamLinesBuffer;

[numthreads(NUM_THREAD_X, NUM_THREAD_Y, NUM_THREAD_Z)]
void CSStreamLines (uint3 Gid : SV_GroupID,
			 uint3 GTid : SV_GroupThreadID,
			 uint3 DTid : SV_DispatchThreadID,
			 uint GI : SV_GroupIndex)
{
	int i = DTid.x;

	float3 position = _StreamLinesBuffer[i].position;
	float3 velocity = _StreamLinesBuffer[i].velocity;
	float3 deathPos = _StreamLinesBuffer[i].deathPosition;
	float  dt = _DeltaTime;

	velocity.y += -_Gravity * dt;

	position.y += velocity.y * dt;
	position.z += velocity.z * dt;

	if (position.y < deathPos.y)
	{
		position = _StreamLinesBuffer[i].birthPosition;
		velocity = _StreamLinesBuffer[i].initVelocity;
	}

	_StreamLinesBuffer[i].position = position;
	_StreamLinesBuffer[i].velocity = velocity;
}